#!/usr/bin/env python
# This file is managed by 'repo_helper'. Don't edit it directly.

# stdlib
import distutils.log
import os
import shutil
import sys

# 3rd party
import setuptools.command.install
from setuptools import setup

sys.path.append('.')

# this package
from __pkginfo__ import *  # pylint: disable=wildcard-import

PTH = 'import sys\n\ntry:\n    import emoji_strings\n    del sys.modules["emoji_strings"]\nexcept ImportError:\n    pass\n'


class install(setuptools.command.install.install):

	def initialize_options(self):
		super().initialize_options()
		# Use this prefix to get loaded as early as possible
		name = "aaaaa_" + self.distribution.metadata.name

		contents = f'import sys; exec({PTH!r})\n'
		self.extra_path = (name, contents)

	def finalize_options(self):
		super().finalize_options()

		install_suffix = os.path.relpath(
				self.install_lib,
				self.install_libbase,
				)
		if install_suffix == '.':
			distutils.log.info("skipping install of .pth during easy-install")
		elif install_suffix == self.extra_path[1]:
			self.install_lib = self.install_libbase
			distutils.log.info(
					"will install .pth to '%s.pth'",
					os.path.join(self.install_lib, self.extra_path[0]),
					)
		else:
			raise AssertionError(
					"unexpected install_suffix",
					self.install_lib,
					self.install_libbase,
					install_suffix,
					)


setup(
		cmdclass={"install": install},
		description="Adds support for emoji-strings in Python, which convert emoji names into actual emoji.",
		extras_require=extras_require,
		install_requires=install_requires,
		py_modules=[],
		version=__version__,
		)

shutil.rmtree("emoji_strings.egg-info", ignore_errors=True)
